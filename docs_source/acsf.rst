========================================
Atom centered symmetry functions (ACSFs)
========================================
In this section, the procedure for generating descriptors consist of Atom Centered Symmetry Functions (ACSFs)[1,2] is described.
The minimum input files required for the calculation are ``input.yaml``, ``str_list``, and hyper-parameter setting files.
The example of ``input.yaml`` in Ti-O-Sr system is shown below.

.. code-block:: text

    structure_list: ./str_list
    data_dir: ./data
    pickle_list: ./pickle_list
    atom_types:
     - Sr
     - Ti
     - O
    params: params

Here, ``structure_list`` specifies the file containing the paths to the structure files to be calculated. The example is shown bellow. 
The structure files can be in any format as long as they can be recognized by **ase.io.read()**.

.. code-block:: text

    ../structure_data/structure_file_0
    ../structure_data/structure_file_1
    ../structure_data/structure_file_2

``data_dir`` specifies the path to the directory to which output files (pickle files) are stored, and ``pickle_list`` specifies the file where the name of output pickle files are recorded.
In ``atom_types``, all the atomic species in structure files must be listed.

Hyper-parameters for each atom type is parsed acccording to the value of ``params``. Specifically, file with the name of "{value}_{atom type}" is parsed.
For example, if "params" is set in ``params``, three files, ``params_Sr``, ``params_Ti``, and ``params_O`` should be prepared.
The format of params_X file is the same as SIMPLE-NN[3] format, as shown bellow.

.. code-block:: text

    2 1 0 7.0 0.0139 0.5  0.0 
    2 1 0 7.0 0.0139 6.5  0.0 
    2 2 0 7.0 0.0139 0.5  0.0 
    2 2 0 7.0 0.0139 6.5  0.0 
    2 3 0 7.0 0.0139 0.5  0.0 
    2 3 0 7.0 0.0139 6.5  0.0 
    4 1 1 7.0 0.5000 1.0  1.0
    4 1 1 7.0 0.5000 1.0 -1.0
    4 2 2 7.0 0.5000 1.0  1.0
    4 2 2 7.0 0.5000 1.0 -1.0
    4 3 3 7.0 0.5000 1.0  1.0
    4 3 3 7.0 0.5000 1.0 -1.0

The value in the first column indicates the symmetry function (SF) type among G2, G4, ang G5. 
When 2 is set in the first column, the value in the second column indicates the index of the counterpart atom starting from 1, and the third column is the dummy column.
The fourth column is for cutoff radius, and the fith and sixth column are for :math:`\eta` and :math:`R_s`, respectively. The seventh column is the dummy column again.

In the case when 4 or 5 is set in the first column, the values in the second and third columns are the indices of neighbor atoms.
The fourth column is for cutoff radius, and the fifth to seventh column are for :math:`\eta`, :math:`\zeta`, and :math:`\lambda`, respectively.

Once ``input.yaml``, ``str_list``, and ``params_X`` are prepared, the descriptors can be generated by runnig the following script.

.. code-block:: python

    from st2d.descriptors.acsf import ACSF

    acsf = ACSF("input.yaml")
    acsf.generate()

References
----------
| [1] J. Behler *et al.*, Phys. Rev. Lett. **98**, 146401 (2007).
| [2] J. Behler, J. Chem. Phys. **134**, 074106 (2011).
| [3] K. Lee *et al.*, Comput. Phys. Commun. **242**, 95-103 (2019).